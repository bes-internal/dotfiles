## Load the shell dotfiles, and then some:
## * ~/.path can be used to extend `$PATH`.
## * ~/.extra can be used for other settings you donâ€™t want to commit.
#for file in ~/.{path,bash_prompt,exports,aliases,functions,extra}; do
#	[ -r "$file" ] && [ -f "$file" ] && source "$file";
#done;
#unset file;

# this has already auto added to the .${SHELL}rc (done automatically by dfm):
# . $HOME/.shellrc.load

alias dfm="$HOME/dotfiles-main/dfm"

alias ll="ls -l"
alias gl="git log --decorate --pretty=format:\"%C(#9f97f3)%ai%Creset | %h | %s %C(auto)%d%Creset\" --graph --all"
alias glh="PAGER='head -n 30' git log --decorate --pretty=format:\"%ai%Creset | %h | %s %C(auto)%d%Creset\" --graph --all"

alias historyclean="cat /dev/null > ~/.bash_history && history -c && history -w && exit"

#################################################################
export EDITOR=${EDITOR:-/bin/nano}
export PAGER=${PAGER:-/usr/bin/less}
#################################################################

# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		echo "git:${BRANCH}"
	else
		echo ""
	fi
}

################################################################

# set window title
case ${TERM} in
        [aEkx]term*|rxvt*|gnome*|konsole*|interix|tmux*)
                PS1='\[\033]0;\u@\h:\w\007\]'
                ;;
        screen*)
                PS1='\[\033k\u@\h:\w\033\\\]'
                ;;
        *)
                unset PS1
                ;;
esac

##########

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.
# We run dircolors directly due to its changes in file syntax and
# terminal name patching.
use_color=false
if type -P dircolors >/dev/null ; then
        # Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
        LS_COLORS=
        if [[ -f ~/.dir_colors ]] ; then
                eval "$(dircolors -b ~/.dir_colors)"
        elif [[ -f /etc/DIR_COLORS ]] ; then
                eval "$(dircolors -b /etc/DIR_COLORS)"
        else
                eval "$(dircolors -b)"
        fi
        # Note: We always evaluate the LS_COLORS setting even when it's the
        # default.  If it isn't set, then `ls` will only colorize by default
        # based on file attributes and ignore extensions (even the compiled
        # in defaults of dircolors). #583814
        if [[ -n ${LS_COLORS:+set} ]] ; then
                use_color=true
        else
                # Delete it if it's empty as it's useless in that case.
                unset LS_COLORS
        fi
else
        # Some systems (e.g. BSD & embedded) don't typically come with
        # dircolors so we need to hardcode some terminals in here.
        case ${TERM} in
        [aEkx]term*|rxvt*|gnome*|konsole*|screen|tmux|cons25|*color) use_color=true;;
        esac
fi

if ${use_color} ; then

        alias ls='ls --color=auto'
        alias grep='grep --colour=auto'
        alias egrep='grep -E --colour=auto'
        alias fgrep='grep -F --colour=auto'
        alias ip='ip -c'

# https://stackoverflow.com/a/66772796/4022466
# PS0 extracts a substring of length 0 from PS1; as a side-effect it causes
# the current time as epoch seconds to PS0time (no visible output in this case)
PS0='\[${PS1:$((PS0time=\D{%s}, PS1calc=1, 0)):0}\]'
# PS1 uses the same trick to calculate the time elapsed since PS0 was output.
# It also expands the previous command's exit status ($?), the current time
# and directory ($PWD rather than \w, which shortens your home directory path
# prefix to "~") on the next line, and finally the actual prompt: 'user@host> '
#PS1='\nSeconds: $((PS1calc ? \D{%s}-$PS0time : 0)) Status: $?\n\D{%T} ${PWD:PS1calc=0}\n\u@\h> '

PS1+='\[\e[38;5;244m\]' # gray
PS1+='\D{%F %T} '       # date time 
PS1+='\[\e[38;5;238m\]' # gray but lighter
PS1+='\D{%Z %s} '       # tz epoch  
PS1+='?$? '		# exit status
PS1+='elapsed: $((PS1calc ? \D{%s}-PS0time : 0))s \[${PWD:PS1calc=0:0}\]'
PS1+='\[\e[0m\]  '      # end
PS1+='$(parse_git_branch)'
PS1+='\n'
if [[ ${EUID} == 0 ]] ; then
 PS1+='\[\033[38;5;201m\]\h\[\033[01;34m\]:\w \$\[\033[00m\] '
else
 PS1+='\[\033[01;32m\]\u@\h\[\033[01;34m\]:\w \$\[\033[00m\] '
fi

else
        # show root@ when we don't have colors
        PS1+='\u@\h \w \$ '
fi
#########################################################
